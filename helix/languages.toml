
[[language]]
name = "go"
auto-format = true
# wait with golangci-lint until 1.60.1 or something; there is a bug atm (2024-08-15)
# it will use all memory
language-servers = ["golangci-lint", "gopls"]
formatter = { command = "goimports" }

[language-server.pyright-langserver]
command = "pyright-langserver"
args = ["--stdio"]
config = { autoSearchPaths = true, diagnosticMode = "workspace" }

[language-server.ruff-lsp]
command = "ruff-lsp"

[language-server.golangci-lint]
command = "golangci-lint" 
args = ["run", "--out-format", "json", "--issues-exit-code=1"]

[language-server.vscode-json-language-server]
command = "vscode-json-language-server"
args = ["--stdio"]
config = { provideFormatter = true, json = { validate = { enable = true }, keeplines = { enable = true } } }

[[language]]
name = "json"
indent = { tab-width = 4, unit = "    "}

[[language]]
name = "python"
auto-format = true
formatter = { command = "black", args = ["--quiet", "-"]}
language-servers = ["pyright-langserver", "ruff-lsp", "pylsp"]

[[language]]
name = "yaml"
language-servers = ["yaml-language-server"]

[[language-server.yaml-language-server.config.yaml]]
format = { enable = true }
validation = true
schemas = { kubernetets = "*.k8s.yaml" }


[language-server.rubocop]
command = "rubocop"
args = ["--lsp"]

[[language]]
name = "ruby"
auto-format = true
language-servers = ["solargraph", "rubocop"]

[[language]]
name = "c-sharp"
language-servers = ["csharp-language-server"]
formatter = { command = "dotnet", args = ["format"] }

[language-server.csharp-language-server]
command = "csharp-ls"

[[language]]
name = "rust"

[language-server.rust-analyzer]
config = { procMacro = { ignored = { leptos_macro = [
  # "component",
  "server"
]}}}

[[language]]
name = "markdown"

# I want line wraps after 80 chars
text-width = 80
soft-wrap = {enable = true, wrap-at-text-width = true}

[[language]]
name = "hcl"
language-servers = [ "terraform-lsp", "terraform-ls" ]

[language-server.terraform-lsp]
command = "terraform-lsp"
