# see https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# screenshot
bind =         , Print, exec, grim -l 0 -g "$(slurp -d)" - | wl-copy -t image/png
bind = $mainMod, Print, exec, grim -l 0 -g "$(slurp -d)" - | swappy -f -

# clamshell mode
bindl = , switch:on:Lid Switch, exec, hyprctl keyword monitor "eDP-1, disable"
bindl = , switch:off:Lid Switch, exec, hyprctl keyword monitor "eDP-1, 1920x1200, 0x0, 1"

# logout
bind = $mainMod SHIFT, P, exec, hyprctl dispatch exit

# example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, alacritty
bind = $mainMod, C, exec, chromium
bind = $mainMod, N, exec, nautilus
bind = $mainMod SHIFT, C, exec, hyprctl reload
bind = $mainMod SHIFT, X, exec, pidof hyprlock || hyprlock
bind = $mainMod SHIFT, Q, killactive

bind = $mainMod, M, exit, 
bind = $mainMod, D, exec, wofi --show drun
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, F, fullscreen, 0

# move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
# move windows around
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d
# bind = $mainMod SHIFT, left, moveactive, -30 0
# bind = $mainMod SHIFT, right, moveactive, 30 0
# bind = $mainMod SHIFT, up, moveactive, 0 -30
# bind = $mainMod SHIFT, down, moveactive, 0 30

# move focus with mainMod + hjkl
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
# move windows around
bind = $mainMod SHIFT, h, movewindow, l
bind = $mainMod SHIFT, l, movewindow, r
bind = $mainMod SHIFT, k, movewindow, u
bind = $mainMod SHIFT, j, movewindow, d
# bind = $mainMod SHIFT, h, moveactive, -30 0
# bind = $mainMod SHIFT, l, moveactive, 30 0
# bind = $mainMod SHIFT, k, moveactive, 0 -30
# bind = $mainMod SHIFT, j, moveactive, 0 30

# switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspacesilent, special:magic

# scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# audio
bindel =, XF86AudioLowerVolume, exec, wpctl set-volume        @DEFAULT_AUDIO_SINK@ 5%-
bindel =, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.0 @DEFAULT_AUDIO_SINK@ 5%+
bindl  =, XF86AudioMute       , exec, wpctl set-mute          @DEFAULT_AUDIO_SINK@ toggle

# brightness / backlight
binde = , XF86MonBrightnessUp,   exec, brightnessctl set 15%+
binde = , XF86MonBrightnessDown, exec, brightnessctl set 15%-

# Resize
bind = $mainMod, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , l,     resizeactive,  20   0
binde = , h,     resizeactive, -20   0
binde = , k,     resizeactive,   0 -20
binde = , j,     resizeactive,   0  20
binde = , right, resizeactive,  20   0
binde = , left,  resizeactive, -20   0
binde = , up,    resizeactive,   0 -20
binde = , down,  resizeactive,   0  20

# use reset to go back to the global submap
bind= , escape, submap, reset 

# will reset the submap, meaning end the current one and return to the global one
submap = reset
